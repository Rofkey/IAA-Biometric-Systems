function Pupil=PupilBoundary(A)  %% Binarization   increment = 0;     while true        [counts,values] = hist(double(A(:)),10);    B = values(1) + increment;        %% Isolation    Ib = A <= B;        bw=bwconncomp(Ib,8);    %% Look for the best candidate    candidate_pupil = regionprops(bw,'Area', 'Eccentricity','Centroid','BoundingBox');    maxArea = 0;    centroid = 0;    for i = 1 : length(candidate_pupil)      if(candidate_pupil(i).Area > maxArea) && (candidate_pupil(i).Eccentricity <= 0.7)        maxArea = candidate_pupil(i).Area;        m = i;        centroid = candidate_pupil(i).Centroid;      end    end    radio = sqrt(maxArea / pi);      if (radio > 5)         break;      end      increment = increment + 5;  end   %% Return centroid and radius  Pupil.Cx=round(centroid(1));  Pupil.Cy=round(centroid(2));  Pupil.R=round(radio);  %% visualizing each area with a different color  lm=labelmatrix(bw);  rgb = label2rgb(lm,'spring',[0 0 0]);  %figure, imshow(rgb);